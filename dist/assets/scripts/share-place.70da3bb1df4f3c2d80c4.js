!function(e){var t={};function n(o){if(t[o])return t[o].exports;var a=t[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(o,a,function(t){return e[t]}.bind(null,a));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="dist/assets/scripts/",n(n.s=2)}([function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));class o{constructor(e){this.render(e)}render(e){if(!google)return void alert("Could not load maps library - please try again later!");const t=new google.maps.Map(document.getElementById("map"),{center:e,zoom:16});new google.maps.Marker({position:e,map:t})}}},,function(e,t,n){"use strict";n.r(t);class o{constructor(e,t){this.fallbackText=t,this.contentTemplateEl=document.getElementById(e),this.modalTemplateEl=document.getElementById("modal-template")}show(){if("content"in document.createElement("template")){const e=document.importNode(this.modalTemplateEl.content,!0);this.modalElement=e.querySelector(".modal"),this.backdropElement=e.querySelector(".backdrop");const t=document.importNode(this.contentTemplateEl.content,!0);this.modalElement.appendChild(t),document.body.insertAdjacentElement("afterbegin",this.modalElement),document.body.insertAdjacentElement("afterbegin",this.backdropElement)}else alert(this.fallbackText)}hide(){this.modalElement&&(document.body.removeChild(this.modalElement),document.body.removeChild(this.backdropElement),this.modalElement=null,this.backdropElement=null)}}var a=n(0);new class{constructor(){const e=document.querySelector("form"),t=document.getElementById("locate-btn");this.shareBtn=document.getElementById("share-btn"),t.addEventListener("click",this.locateUserHandler.bind(this)),this.shareBtn.addEventListener("click",this.sharePlaceHandler),e.addEventListener("submit",this.findAddressHandler.bind(this))}sharePlaceHandler(){const e=document.getElementById("share-link");navigator.clipboard?navigator.clipboard.writeText(e.value).then(()=>{alert("Copied into clipboard!")}).catch(t=>{console.log(t),e.select()}):e.select()}selectPlace(e,t){this.map?this.map.render(e):this.map=new a.a(e),this.shareBtn.disabled=!1;document.getElementById("share-link").value=`${location.origin}/my-place?address=${encodeURI(t)}&lat=${e.lat}&lng=${e.lng}`}locateUserHandler(){if(!navigator.geolocation)return void alert("Location feature is not available in your browser - please use a more modern browser or manually enter an address.");const e=new o("loading-modal-content","Loading location - please wait!");e.show(),navigator.geolocation.getCurrentPosition(async t=>{const n={lat:t.coords.latitude+50*Math.random(),lng:t.coords.longitude+50*Math.random()},o=await async function(e){const t=await fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${e.lat},${e.lng}&key=YOUR_API_KEY`);if(!t.ok)throw new Error("Failed to fetch address. Please try again!");const n=await t.json();if(n.error_message)throw new Error(n.error_message);return n.results[0].formatted_address}(n);e.hide(),this.selectPlace(n,o)},t=>{e.hide(),alert("Could not locate you unfortunately. Please enter an address manually!")})}async findAddressHandler(e){e.preventDefault();const t=e.target.querySelector("input").value;if(!t||0===t.trim().length)return void alert("Invalid address entered - please try again!");const n=new o("loading-modal-content","Loading location - please wait!");n.show();try{const e=await async function(e){const t=encodeURI(e),n=await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${t}&key=YOUR_API_KEY`);if(!n.ok)throw new Error("Failed to fetch coordinates. Please try again!");const o=await n.json();if(o.error_message)throw new Error(o.error_message);return o.results[0].geometry.location}(t);this.selectPlace(e,t)}catch(e){alert(e.message)}n.hide()}}}]);
//# sourceMappingURL=share-place.70da3bb1df4f3c2d80c4.js.map